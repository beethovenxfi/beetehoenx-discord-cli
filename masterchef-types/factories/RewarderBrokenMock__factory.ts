/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { RewarderBrokenMock } from "../RewarderBrokenMock";

export class RewarderBrokenMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<RewarderBrokenMock> {
    return super.deploy(overrides || {}) as Promise<RewarderBrokenMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RewarderBrokenMock {
    return super.attach(address) as RewarderBrokenMock;
  }
  connect(signer: Signer): RewarderBrokenMock__factory {
    return super.connect(signer) as RewarderBrokenMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewarderBrokenMock {
    return new Contract(address, _abi, signerOrProvider) as RewarderBrokenMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "onBeetsReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "beetsAmount",
        type: "uint256",
      },
    ],
    name: "pendingTokens",
    outputs: [
      {
        internalType: "contract IERC20[]",
        name: "rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "rewardAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101d6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063929bffc21461003b578063d63b3c491461004b575b600080fd5b610049610036366004610099565b005b61005e6100593660046100e7565b610075565b60405161006c92919061011c565b60405180910390f35b606080600080fd5b80356001600160a01b038116811461009457600080fd5b919050565b600080600080600060a086880312156100b157600080fd5b853594506100c16020870161007d565b93506100cf6040870161007d565b94979396509394606081013594506080013592915050565b6000806000606084860312156100fc57600080fd5b8335925061010c6020850161007d565b9150604084013590509250925092565b604080825283519082018190526000906020906060840190828701845b8281101561015e5781516001600160a01b031684529284019290840190600101610139565b5050508381038285015284518082528583019183019060005b8181101561019357835183529284019291840191600101610177565b509097965050505050505056fea264697066735822122027826e0416198eebe4ef80b421607765814de8b5269501255d4a0f4871d7baf464736f6c63430008070033";
